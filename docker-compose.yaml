version: "3.8"

networks:
  intigriti-network:
    driver: bridge
    name: intigriti-network

volumes:
  postgres-data:
  pgadmin-data:

services:

  nextjs-app:
    container_name: nextjs-app
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_POSTGRES_URL=postgresql://psuser:pspassord@postgres:5432/psdtabase
      - NEXT_PUBLIC_APP_URL=http://localhost:300
    networks:
      - intigriti-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: psuser
      POSTGRES_PASSWORD: pspassord
      PGDATA: /data/postgres
      POSTGRES_DB: psdtabase
    volumes:
      - postgres-data:/data/postgres
    ports:
      - 5332:5432
    networks:
      - intigriti-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - intigriti-network
    restart: unless-stopped
    depends_on:
      - postgres
